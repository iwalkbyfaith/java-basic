package superclass;

// 초음속 비행기는 비행기를 상속합니다.
public class SuperSonicAirplane extends Airplane{
	// 초음속비행기도 일반 비행기처럼 속도값만 가집니다.
	// 따라서 변수는 추가로 정의하지는 않습니다.
	
	public SuperSonicAirplane(int speed) {
		// 부모의 생성자는 상속되지 않습니다.
		// 따라서 자식쪽에서 부모쪽 생성자에 전달할 값까지 모두 처리해야 합니다.
		// 부모 생성자는 super();로 이름이 고정입니다.
		// ★★★★부모 생성자가 무조건 1순위로 호출되어야 합니다.★★★★★★
		super(speed);  // super = 부모 클래스의 생성자
		   			   // "에어플레인에 스피드를 넘겨줘라"
					   // 무!조!건! 1순위로 부모 클래스부터 케어해주어야 한다.
					   // 13번 줄이 실행되면 스택에 에어플레인의 값이 다 채워진다.
		System.out.println("초음속 비행기 속도는" + speed);
		
		// 수퍼소닉에어플레인에서 속도 입력 받음
		// -> 에어플레인 '생성자'에 값을 입력 받음
		// -> 에어플레인 '클래스'에 속도를 전해줌.
		// 자식 쪽에서 부모쪽 생성자까지 챙겨줘야하는 것.
	}
	
	// 초음속 비행은 속도가 900 이상, 1300 이하인 경우 호출됩니다.
	// 현재 SuperSonicAirplane 내부이기 때문에
	// public void fly() 작성시, 오버라이딩이 일어나게 되는데
	// 그럼에도 불구하고 일반 비행을 하게 되는 구간인 경우 super.fly()를 호출하면 됩니다.
	
	public void fly() {     // 오버라이드 fly. 원래는 얘만 호출되어야 했는데(->33번줄 확인)
		//기존속도 + 500의 결과 속도가 900 이하로 판정된 경우
		if((speed + 500) <= 900) {
			super.fly();   // 일반 비행을 나타내기 위해 부모쪽 fly를 호출함. (오버라이딩 이전 fly)
		}else {
			// 속도가 900이상 1300 이하인 경우: 최대 속도 1300, 가속 500씩
			// if ~else 문으로 처리.
			if( 900 <= (speed + 500) && (speed + 500) < 1300) {
					speed += 500;
			}else {
				speed = 1300;
			}
			System.out.println("초음속 비행중입니다 : " + speed + "km/s");
			
			// 선생님 답
			// if(speed+500 > 1300){
			//  speed = 1300;
			// }else{
			//	  speed += 500;
			// }
		}
		
	}
	
}
